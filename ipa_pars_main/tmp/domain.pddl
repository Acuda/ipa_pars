(define (domain cob-test-domain-01)
 	(:requirements :strips)
 	(:predicates
 		(trans ?location-1 ?location-2)
 		(at ?what ?location)
 		(object-is-at ?what ?where) 
 		(have ?who ?what) 
 		(is-robo ?who)
 		(occupied ?where)
 	(see ?who ?what)
 	(is-user ?who)
 	(neglected ?who)
 		;;;(nearby ?who ?where)
 	)
 
 	(:action move-robo-to
 		:parameters (?who ?from ?to)
 		:precondition (and 
 				   (is-robo ?who)
 				   (at ?who ?from)
 				   (trans ?from ?to)
 				   (not (occupied ?to))
 				   (neglected ?who)
 				   )
 		:effect (and (not (at ?who ?from)
 				  )
 			     (at ?who ?to)
 			     ;;;(neglected ?who)
 			     )
 	)
 	
 	;;;(:action move-user
 	;;;	:parameters (?who ?from ?to)
 	;;;	:precondition (and
 	;;;			 (is-user ?who)
 	;;;			 (at ?who ?from)
 	;;;			 (trans ?from ?to)
 	;;;			 (not (occupied ?to))
 	;;;		      )
 	;;;	:effect (and (not (at ?who ?from))
 	;;;		     (at ?who ?to)
 	;;;		)
 	;;;)
 
 	;;;(:action be-close-to
 	;;;	:parameters (?who ?from ?close-to)
 	;;;	:precondition (and
 	;;;			  (is-robo ?who)
 	;;;			  (at ?who ?from)
 	;;;			  (trans ?from ?close-to)
 	;;;			  )
 	;;;	:effect: (and (nearby ?who ?close-to)
 	;;;)
 
 	;;;(:action move-robo-to
 	;;;	:parameters (?who ?from ?to)
 	;;;	:precondition (and
 	;;;			   (is-robo ?who)
 	;;;			   (at ?who ?from)
 	;;;			   (trans ?from ?to))
 	;;;	:effect (and (not (at ?who ?from))
 	;;;			(at ?who ?to))
 	;;;)
 
 	;;;(:action take
 	;;;	:parameters (?who ?what ?where ?close-to)
 	;;;	:precondition (and (is-robo ?who)
 	;;;			   (at ?who ?where)
 	;;;			   (at ?what ?close-to)
 	;;;			   (trans ?where ?close-to)
 	;;;			   ;;;(nearby ?who ?close-to)
 	;;;			   )
 	;;;	:effect (and (have ?who ?what)
 	;;;		     (not (at ?what ?close-to)))
 	;;;)
 
 	(:action look-at
 		:parameters (?who ?what ?where ?close-to)
 		:precondition (and (is-robo ?who)
 				   (at ?who ?where)
 				   (trans ?where ?close-to)
 				   (at ?what ?close-to)
 				   (neglected ?who)
 				   )
 		:effect (and (see ?who ?what)
 			     (not (neglected ?who))
 			)
 	)
 
 	(:action grip-it
 		:parameters (?who ?what ?where ?from)
 		:precondition (and (is-robo ?who)
 				   (at ?who ?where)
 				   (see ?who ?what)
 				   (trans ?where ?from)
 				   (at ?what ?from)
 				   (not (neglected ?who))
 				   )
 		:effect (and 	(neglected ?who)
 				(have ?who ?what)
 				(not (occupied ?from))
 				(not (at ?what ?from))
 				(not (see ?who ?what))
 			)
 	)
 	
 	(:action put-it
 		:parameters (?who ?what ?where ?to)
 		:precondition (and (is-robo ?who)
 				   ;;;(is-user ?pers)
 				   (at ?who ?where)
 				   (have ?who ?what)
 				   (trans ?where ?to)
 				   ;;;(at ?pers ?where)
 				)
 		:effect (and (at ?what ?to)
 			      (occupied ?to)
 			      (not (have ?who ?what)))
 	)
 	
 	(:action deliver-to
 		:parameters (?pers ?what ?who ?where ?to)
 		:precondition (and (is-robo ?who)
 				   (is-user ?pers)
 				   (have ?who ?what)
 				   (at ?pers ?to)
 				   (at ?who ?where)
 				   (trans ?where ?to)
 				   (see ?who ?pers)
 				   (not (neglected ?who))
 				)
 		:effect (and (have ?pers ?what)
 			     (neglected ?who)
 			     (not (have ?who ?what))
 			     (see ?who ?what)
 			)
 	)
 
 	(:action neglect
 		:parameters (?pers ?who)
 		:precondition (and (is-robo ?who)
 				   (is-user ?pers)
 					)
 		:effect (and (neglected ?who)
 			     (not (see ?who ?pers))
 			)
 	)
 
 	;;;(:action talk-to-user
 	;;;	:parameters (?who ?what)
 	;;;	:precondition (and (is-robo ?who)
 	;;;			   (com ?what)
 
 )
